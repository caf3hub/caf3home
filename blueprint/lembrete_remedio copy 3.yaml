blueprint:
  name: Lembrete Rem√©dio - Conversation AI
  description: Cria lembretes de rem√©dio em determinados hor√°rios.
  domain: automation
  input:
    notification_target:
      name: Servi√ßo de Notifica√ß√£o
      description: Servi√ßo de notifica√ß√£o que ir√° enviar a mensagem.
      default: "notify.mqtt_notify"
      selector:
        text:
    conversation:
      name: Servi√ßo de Conversation AI
      description: Servi√ßo de conversation ai que ir√° gerar a mensagem.
      default: "conversation.google_generative_ai"
      selector:
        text:
    remedio_lista:
      name: Lista de Rem√©dios
      description: Insira os rem√©dios no formato - Nome, HH:MM, Descri√ß√£o
      selector:
        text:
          multiline: true

variables:
  remedio_lista: !input remedio_lista

triggers:
  - trigger: time_pattern
    minutes: /1

condition:
  - condition: template
    value_template: >
      {% set horario_atual = now().strftime('%H:%M') %}
      {% set ns = namespace(horarios=[]) %}

      {% for remedio in remedio_lista.split('\n') %}
        {% set remedio_dados = remedio.split(', ') %}
        {% if remedio_dados | length > 1 %}
          {% set ns.horarios = ns.horarios + [remedio_dados[1].strip()] %}
        {% endif %}
      {% endfor %}

      {% if horario_atual in ns.horarios %}
        {{ true }}
      {% else %}
        {{ false }}
      {% endif %}

action:
  - alias: Preparar texto da notifica√ß√£o
    data:
      text: >-
        {%- set horario_atual = now().strftime('%H:%M') -%}
        {%- set remedios = remedio_lista.split('\n') -%}
        {%- set ns = namespace(encontrou=false)-%}

        {%- for remedio in remedios -%}
          {%- set remedio_dados = remedio.split(', ') -%}
          {%- if remedio_dados | length > 2 and remedio_dados[1].strip() == horario_atual -%}
            - **Rem√©dio**: {{ remedio_dados[0].strip() }} üíä  
              **Hor√°rio**: {{ remedio_dados[1].strip() }} ‚è∞  
              **Instru√ß√£o**: {{ remedio_dados[2].strip() }}  
            {%- set ns.encontrou = true -%}  {# Marca que encontrou um rem√©dio #}
          {%- endif -%}
        {%- endfor -%}

        {%- if not ns.encontrou -%}  {# Se nenhum rem√©dio foi encontrado #}
          Nenhum rem√©dio a ser tomado agora.
        {%- endif -%}

      agent_id: !input conversation
    response_variable: agent
    action: conversation.process

  - alias: Enviar notifica√ß√£o
    service: !input notification_target
    data:
      title: "{{ now().strftime('%A') }} Lembrete de Rem√©dios"
      message: "{{ agent.response.speech.plain.speech }}"