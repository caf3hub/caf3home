blueprint:
  name: Lembrete Rem√©dio - Conversation AI
  description: Cria lembretes de rem√©dio em determinados hor√°rios e permite integra√ß√£o via MQTT.
  domain: automation
  input:
    notification_target:
      name: Servi√ßo de Notifica√ß√£o
      description: Servi√ßo de notifica√ß√£o que ir√° enviar a mensagem.
      default: "notify.mqtt_notify"
      selector:
        text:
    conversation:
      name: Servi√ßo de Conversation AI
      description: Servi√ßo de conversation ai que ir√° gerar a mensagem.
      default: "conversation.google_generative_ai"
      selector:
        text:
    remedio_lista:
      name: Lista de Rem√©dios
      description: Insira os rem√©dios no formato - Nome, HH:MM, Descri√ß√£o
      selector:
        text:
          multiline: true
    lembrete_boolean:
      name: Input Boolean Lembrete Rem√©dio
      description: O boolean que controla o status de lembrete de rem√©dio.
      selector:
        entity:
          domain: input_boolean

variables:
  remedio_lista: !input remedio_lista
  lembrete_boolean: !input lembrete_boolean

triggers:
  - platform: mqtt
    topic: home/telegram/message
    id: remedio_mqtt
  - platform: mqtt
    topic: home/telegram/message/user
    payload: remedio_tomado
    id: remedio_mqtt_user
  - platform: state
    entity_id: !input lembrete_boolean
    to: "on"
    id: lembrar_remedio
  - platform: time_pattern
    minutes: /1
    id: hora_remedio

conditions: []

actions:
  - alias: preparar texto
    if:
      - condition: trigger
        id: hora_remedio
      - condition: template
        value_template: >
          {% set horario_atual = now().strftime('%H:%M') %}
          {% set ns = namespace(horarios=[]) %}
          {% for remedio in remedio_lista.split('\n') %}
            {% set remedio_dados = remedio.split(', ') %}
            {% if remedio_dados | length > 1 %}
              {% set ns.horarios = ns.horarios + [remedio_dados[1].strip()] %}
            {% endif %}
          {% endfor %}
          {{ horario_atual in ns.horarios }}
    then:
      - service: conversation.process
        data:
          text: >-
            O nome do seu mestre e pai √© Ruan, mas me chame de Mestre apenas.
            Voc√™ vai enviar mensagens para o Telegram ou para Alexa.
            Varie o estilo da mensagem a cada vez que for gerada.
            N√£o quero sugest√µes, mande apenas uma mensagem.
            N√£o envie "\n" e nem tente fazer quebras de linha assim, nem nada disso pois n√£o funciona no Telegram.
            Se for quebrar linhas, apenas fa√ßa como se tivesse dando um enter e continue a digitar.
            Crie uma mensagem √∫nica e personalizada, de maneira criativa e variada, para informar que t√° na hora de tomar o rem√©dio.
            - Inclua as seguintes informa√ß√µes sobre os rem√©dios:
              - Nome do rem√©dio
              - Hor√°rio de tomar
              - Instru√ß√µes ou descri√ß√£o
            Rem√©dios para Agora:
            {%- set remedios = remedio_lista.split('\n') -%}
            {%- set ns = namespace(encontrou=false) -%}
            {%- for remedio in remedios -%}
              {%- set remedio_dados = remedio.split(', ') -%}
              {%- if remedio_dados | length > 2 and remedio_dados[1].strip() == horario_atual -%}
                - **Rem√©dio**: {{ remedio_dados[0].strip() }} üíä  
                  **Hor√°rio**: {{ remedio_dados[1].strip() }} ‚è∞  
                  **Instru√ß√£o**: {{ remedio_dados[2].strip() }}  
                {%- set ns.encontrou = true -%}
              {%- endif -%}
            {%- endfor %}
            {%- if not ns.encontrou -%}
              Nenhum rem√©dio a ser tomado agora.
            {%- endif %}
          agent_id: !input conversation
        response_variable: agent

  - alias: Enviar notifica√ß√£o
    service: !input notification_target
    data:
      title: "{{ now().strftime('%A') }} Lembrete de Rem√©dios"
      message: "{{ agent.response.speech.plain.speech }}"

  - alias: Se for notificado sobre algum rem√©dio
    if:
      - condition: trigger
        id: remedio_mqtt
      - condition: template
        value_template: "{{ 'Lembrete de Rem√©dios' in trigger.payload_json.title }}"
    then:
      - service: input_boolean.turn_on
        target:
          entity_id: !input lembrete_boolean

  - alias: Se receber remedio_tomado no user
    if:
      - condition: trigger
        id: remedio_mqtt_user
    then:
      - service: input_boolean.turn_off
        target:
          entity_id: !input lembrete_boolean

  - alias: lembrar novamente do rem√©dio
    if:
      - condition: trigger
        id: lembrar_remedio
    then:
      - repeat:
          while:
            - condition: state
              entity_id: !input lembrete_boolean
              state: "on"
          sequence:
            - delay:
                hours: 0
                minutes: 1
                seconds: 0
                milliseconds: 0
            - service: script.enviar_mensagem_personalizada_com_ia_generativa
              data:
                notification_target: !input notification_target
                prompt: >-
                  Voc√™ √© a FRIDAY do Homem de Ferro, e uma assistente pessoal da minha casa.
                mensagem: >-
                  Voc√™ tomou seu rem√©dio? Se j√° tomou pode desconsiderar, se n√£o tomou √© melhor tomar.

mode: parallel
max: 3
