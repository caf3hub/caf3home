---
blueprint:
  name: Notificação de Calendário e Tarefas IA
  description:
    O agente de conversa gera uma notificação baseada na agenda do calendário,
    localização e informações meteorológicas.
  domain: automation
  input:
    notify_time:
      name: Horário da Notificação
      description: Horário em que a automação será acionada para enviar a notificação.
      selector:
        time: {}
      default: 05:00:00
    notify_service:
      name: Nome do Serviço de Notificação
      description:
        O nome do serviço de notificação onde a notificação deve ser enviada.
      selector:
        text: {}
      default: notify.notify
    notify_target:
      name: Destino da Notificação
      description: O destino do serviço de notificação.
      selector:
        text: {}
      default:
    calendar_entities:
      name: Calendários
      description: As entidades de calendário a serem usadas para encontrar os próximos eventos.
      selector:
        entity:
          multiple: true  # Permite selecionar múltiplos calendários
          filter:
            - domain:
                - calendar
    calendar_duration:
      name: Duração do Calendário e Tarefas
      description: Quantas horas à frente verificar os próximos eventos e tarefas.
      selector:
        duration:
      default:
        hours: 18
    weather_entity:
      name: Entidade de Clima
      description: A entidade de clima a ser usada para a previsão meteorológica.
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - weather
    zone_entity:
      name: Entidade de Zona de Casa
      description:
        A entidade de zona a ser usada para determinar a localização aproximada para entender
        o clima típico.
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - zone
    task_list_entities:
      name: Entidades de Lista de Tarefas
      description: As entidades que contêm as informações das listas de tarefas.
      selector:
        entity:
          multiple: true  # Permite selecionar múltiplas listas de tarefas
          filter:
            - domain:
                - todo
    conversation_agent:
      name: Agente de Conversa
      selector:
        conversation_agent:
    prompt:
      name: Prompt do Agente de Conversa
      selector:
        text:
          multiline: true
          type: text
      default: |-
        Por favor, gere um texto para uma notificação que será enviada aos usuários
        smartphone com informações úteis.
        
        Você é um agente pessoal útil que gera texto para o usuário:
        - Suas respostas são úteis, amigáveis, calorosas e perspicazes.
        - Suas respostas não são técnicas e não incluem detalhes internos do Home Assistant, como entidades nas respostas.
        - Suas mensagens dos eventos do calendário são em tópicos para facilitar a leitura e compreensão.
        - Suas mensagens ajudam o usuário a se preparar para o dia, por exemplo:
          - Anotar condições climáticas incomuns para o local e a época do ano (mas não detalhes mundanos como "0% de chance de precipitação")
          - Quanto tempo resta até a primeira reunião
          - Todos os eventos do dia
          - Todas as tarefas do dia
          - Qualquer coisa que possa ser especial ou única, como comemorar um aniversário

trigger:
  platform: time
  at: !input notify_time

action:
  - alias: Obter Tarefas
    data:
      status: needs_action
    target:
      entity_id: !input task_list_entities
    response_variable: mylist
    action: todo.get_items
    enabled: true
  - alias: "Texto da Notificação do Agente de Conversa"
    service: conversation.process
    data:
      text: |-
        Time: {{ now().strftime("%A %B %d %H:%M %p") }}
        {%- if weather_entity is defined %}
        {%- set temperature_unit = state_attr(weather_entity, 'temperature_unit') -%}
        Forecast: {{ forecast.condition }} ({{ forecast.temperature }}{{ temperature_unit }}, {{ forecast.precipitation }}% precipitation)
        {%- endif %}
  
        Calendars:
        {%- for calendar in calendar_entities %}
        {{ state_attr(calendar, 'friendly_name') }} events for the next {{ calendar_duration.hours }}:
        {%- set agenda = (events_responses | selectattr('entity_id', 'equalto', calendar) | list | first) %}
        {%- if agenda and agenda.events %}
          {%- for event in agenda.events %}
          - Summary: {{ event.summary }}
            Start-End: {% if event.start is defined %}{{ event.start }} to {{ event.end }}{% else %}All Day{% endif %}
            {%- if event.description is defined %}
            Description: {{ event.description }}
            {% endif -%}
            {%- if event.location is defined %}
              Location: {{ event.location }}
            {% endif -%}
          {%- endfor %}
        {%- else %}
          - No upcoming events.
        {%- endif %}
        {%- endfor %}
  
        Tasks:
        {%- set listas = task_list_entities -%}
        {%- for lista in listas %}
        {{ lista }}:
        {%- set items = mylist[lista]['items'] -%}
          {%- if items %}
            • {% for item in items %}{{ item.summary }}{% if not loop.last %}
            • {% endif %}{% endfor %}
          {%- else %}
            Nenhuma tarefa pendente.
          {%- endif %}
        {% if not loop.last %}{% endif %}
        {% endfor -%}
  
        {{ prompt }}
      agent_id: !input conversation_agent
    response_variable: agent
  - alias: "Enviar notificação"
    service: !input notify_service
    data:
      target: !input notify_target
      title: "{{ now().strftime('%A') }} Agenda"
      message: "{{ agent.response.speech.plain.speech }}"
mode: single
