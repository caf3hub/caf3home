blueprint:
  name: Calendar and To-Do List Notification
  description: |
    **Version: 1.0**

    This blueprint retrieves upcoming events from up to 3 calendars and tasks from up to 3 task lists and sends notifications with the details.

    **Inputs:**
    - Notification time to trigger the automation.
    - Number of calendars and task lists to use.
    - Entities for the calendars and task lists.
    - Notification service(s) to send the message.
  author: Your Name
  domain: automation
  input:
    notify_time:
      name: Notification time
      description: Time the automation is triggered to send the notification.
      selector:
        time: {}
      default: 07:00:00
    calendar_number:
      name: How many calendars do you want to use?
      description: Select the number of calendars to use.
      default: one
      selector:
        select:
          options:
          - label: '1'
            value: one
          - label: '2'
            value: two
          - label: '3'
            value: three
          multiple: false
          custom_value: false
    calendar_entity_1:
      name: First Calendar
      description: The first calendar entity to use for finding upcoming calendar events.
      default: []
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - calendar
    calendar_entity_2:
      name: Second Calendar
      description: The second calendar entity to use for finding upcoming calendar events.
      default: []
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - calendar
    calendar_entity_3:
      name: Third Calendar
      description: The third calendar entity to use for finding upcoming calendar events.
      default: []
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - calendar
    calendar_duration:
      name: Calendar event duration
      description: How many hours ahead to look for upcoming calendar events.
      selector:
        duration:
      default:
        hours: 18
    task_number:
      name: How many task lists do you want to use?
      description: Select the number of task lists to use.
      default: one
      selector:
        select:
          options:
          - label: '1'
            value: one
          - label: '2'
            value: two
          - label: '3'
            value: three
          multiple: false
          custom_value: false
    task_list_entity_1:
      name: First Task List
      description: The first task list entity to use.
      default: []
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - todo
    task_list_entity_2:
      name: Second Task List
      description: The second task list entity to use.
      default: []
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - todo
    task_list_entity_3:
      name: Third Task List
      description: The third task list entity to use.
      default: []
      selector:
        entity:
          multiple: false
          filter:
            - domain:
                - todo
    notify_number:
      name: How many notify services do you want to use?
      description: Select the number of notify services to use.
      default: one
      selector:
        select:
          options:
          - label: '1'
            value: one
          - label: '2'
            value: two
          - label: '3'
            value: three
          multiple: false
          custom_value: false
    notify_service_1:
      name: First Notify service name
      description:
        The name of the first notify service where the notification should be sent.
      selector:
        text: {}
      default: notify.notify_1
    notify_service_2:
      name: Second Notify service name
      description:
        The name of the second notify service where the notification should be sent.
      selector:
        text: {}
      default: notify.notify_2
    notify_service_3:
      name: Third Notify service name
      description:
        The name of the third notify service where the notification should be sent.
      selector:
        text: {}
      default: notify.notify_3
    conversation_agent:
      name: Conversation agent
      description: The conversation agent to use for generating the notification text.
      selector:
        conversation_agent:
    prompt:
      name: Conversation agent prompt
      selector:
        text:
          multiline: true
          type: text
      default: |-
        Please generate text for a notification that will be sent to the user with helpful information.

        You are a helpful personal agent that generates text for the user:
        - Your answers are helpful, friendly, warm, and insightful.
        - Your answers are not technical and do not include Home Assistant internal details such as entities in responses.
        - Your messages help the user prepare for their day by summarizing upcoming events and tasks.
        - Make note of any special or unusual details such as birthdays, important meetings, or weather conditions.

trigger:
  platform: time
  at: !input notify_time

action:
  - variables:
      calendar_number: !input calendar_number
      calendar_entity_1: !input calendar_entity_1
      calendar_entity_2: !input calendar_entity_2
      calendar_entity_3: !input calendar_entity_3
      task_number: !input task_number
      task_list_entity_1: !input task_list_entity_1
      task_list_entity_2: !input task_list_entity_2
      task_list_entity_3: !input task_list_entity_3
      notify_number: !input notify_number
      calendar_duration: !input calendar_duration
      prompt: !input prompt

  - alias: Fetch First Calendar Agenda
    service: calendar.list_events
    data:
      duration: !input calendar_duration
    target:
      entity_id: !input calendar_entity_1
    response_variable: agenda_1

  - if:
      - condition: template
        value_template: '{{ (calendar_number == ''two'') or (calendar_number == ''three'') }}'
    then:
      - alias: Fetch Second Calendar Agenda
        service: calendar.list_events
        data:
          duration: !input calendar_duration
        target:
          entity_id: !input calendar_entity_2
        response_variable: agenda_2

  - if:
      - condition: template
        value_template: '{{ calendar_number == ''three''}}'
    then:
      - alias: Fetch Third Calendar Agenda
        service: calendar.list_events
        data:
          duration: !input calendar_duration
        target:
          entity_id: !input calendar_entity_3
        response_variable: agenda_3

  - alias: Fetch First Task List
    service: todo.get_items
    data:
      entity_id: !input task_list_entity_1
    response_variable: tasks_1

  - if:
      - condition: template
        value_template: '{{ (task_number == ''two'') or (task_number == ''three'') }}'
    then:
      - alias: Fetch Second Task List
        service: todo.get_items
        data:
          entity_id: !input task_list_entity_2
        response_variable: tasks_2

  - if:
      - condition: template
        value_template: '{{ task_number == ''three''}}'
    then:
      - alias: Fetch Third Task List
        service: todo.get_items
        data:
          entity_id: !input task_list_entity_3
        response_variable: tasks_3

  - alias: "Generate Notification Text"
    service: conversation.process
    data:
      text: |-
        {% set calendars = {'calendar1': agenda_1, 'calendar2': agenda_2 if calendar_number in ['two', 'three'] else None, 'calendar3': agenda_3 if calendar_number == 'three' else None} %}
        {% set tasks = {'task1': tasks_1, 'task2': tasks_2 if task_number in ['two', 'three'] else None, 'task3': tasks_3 if task_number == 'three' else None} %}
        
        {% for cal_key, agenda in calendars.items() %}
        {{ cal_key | capitalize }}:
        {% if agenda.events %}
          {% for event in agenda.events %}
          - Event: {{ event.summary }}
            Start-End: {% if event.start is defined %}{{ event.start }} to {{ event.end }}{% else %}All Day{% endif %}
            {%- if event.description is defined %}
            Description: {{ event.description }}
            {% endif -%}
            {%- if event.location is defined %}
              Location: {{ event.location }}
            {% endif -%}
          {% endfor %}
        {% else %}
          - No upcoming events.
        {% endif %}
        {% endfor %}

        {% for task_key, tasks_list in tasks.items() %}
        {{ task_key | capitalize }}:
        {% if tasks_list.items %}
          {% for task in tasks_list.items %}
          - Task: {{ task.summary }}
          {% endfor %}
        {% else %}
          - No tasks pending.
        {% endif %}
        {% endfor %}
        
        {{ prompt }}
      agent_id: !input conversation_agent
    response_variable: agent

  - alias: "Send Notification"
    service: !input notify_service_1
    data:
      title: "Daily Overview"
      message: "{{ agent.response.speech.plain.speech }}"
  - if:
      - condition: template
        value_template: '{{ (notify_number == ''two'') or (notify_number == ''three'') }}'
    then:
      - alias: "Send Notification"
        service: !input notify_service_2
        data:
          title: "Daily Overview"
          message: "{{ agent.response.speech.plain.speech }}"
  - if:
      - condition: template
        value_template: '{{ notify_number == ''three''}}'
    then:
      - alias: "Send Notification"
        service: !input notify_service_3
        data:
          title: "Daily Overview"
          message: "{{ agent.response.speech.plain.speech }}"
